{"ast":null,"code":"var _jsxFileName = \"/home/sunxiaojian/project/108\\u4E92\\u4F5C\\u7F51\\u7AD9/protein-interaction-site/src/components/ProteinNetwork.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProteinNetwork({\n  onSelectProtein\n}) {\n  _s();\n  const svgRef = useRef(null);\n  const [data, setData] = useState({\n    nodes: [],\n    links: []\n  });\n  const [svgDimensions, setSvgDimensions] = useState({\n    width: 800,\n    height: 600\n  });\n\n  // 转换互作数据为网络图数据\n  const transformData = interactions => {\n    const nodesMap = new Map();\n    const links = [];\n\n    // 处理互作数据\n    interactions.forEach(interaction => {\n      const source = interaction['Protein 1'];\n      const target = interaction['Protein 2'];\n      const score = parseFloat(interaction.Score);\n\n      // 添加节点\n      if (!nodesMap.has(source)) {\n        nodesMap.set(source, {\n          id: source\n        });\n      }\n      if (!nodesMap.has(target)) {\n        nodesMap.set(target, {\n          id: target\n        });\n      }\n\n      // 添加链接\n      links.push({\n        source,\n        target,\n        value: score\n      });\n    });\n    return {\n      nodes: Array.from(nodesMap.values()),\n      links\n    };\n  };\n\n  // 加载互作数据\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('/api/interactions');\n        const interactions = await response.json();\n        const graphData = transformData(interactions);\n        setData(graphData);\n      } catch (error) {\n        console.error('Failed to fetch interactions:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    const svg = d3.select(svgRef.current);\n\n    // 设置SVG尺寸\n    svg.attr('width', svgDimensions.width).attr('height', svgDimensions.height).style('transition', 'all 0.3s ease');\n\n    // 创建力导向图模拟\n    const simulation = d3.forceSimulation(data.nodes).force('link', d3.forceLink(data.links).id(d => d.id).distance(100)).force('charge', d3.forceManyBody().strength(-200)).force('center', d3.forceCenter(svgDimensions.width / 2, svgDimensions.height / 2)).force('collision', d3.forceCollide().radius(30));\n\n    // 创建链接\n    const link = svg.append('g').selectAll('line').data(data.links).join('line').attr('stroke', d => d.value === 1 ? '#1976d2' : '#999').attr('stroke-opacity', d => d.value === 1 ? 1 : 0.6).attr('stroke-width', d => d.value === 1 ? 2 : Math.sqrt(d.value || 1)).attr('stroke-dasharray', d => d.value === 1 ? null : '2,2');\n\n    // 创建节点\n    const node = svg.append('g').attr('stroke', '#fff').attr('stroke-width', 1.5).selectAll('circle').data(data.nodes).join('circle').attr('r', 8).attr('fill', '#1976d2').call(d3.drag().on('start', dragstarted).on('drag', dragged).on('end', dragended)).on('click', (event, d) => {\n      onSelectProtein(d.id);\n    }).on('mouseover', function () {\n      d3.select(this).transition().duration(100).attr('r', 12).attr('fill', '#ff7f0e');\n    }).on('mouseout', function () {\n      d3.select(this).transition().duration(100).attr('r', 8).attr('fill', '#1976d2');\n    });\n\n    // 添加节点标签\n    const label = svg.append('g').selectAll('text').data(data.nodes).join('text').text(d => d.id).attr('font-size', 10).attr('dx', 12).attr('dy', '.35em');\n\n    // 动画更新\n    simulation.on('tick', () => {\n      link.attr('x1', d => d.source.x).attr('y1', d => d.source.y).attr('x2', d => d.target.x).attr('y2', d => d.target.y);\n      node.attr('cx', d => d.x).attr('cy', d => d.y);\n      label.attr('x', d => d.x).attr('y', d => d.y);\n    });\n\n    // 拖拽事件处理\n    function dragstarted(event, d) {\n      if (!event.active) simulation.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n    function dragged(event, d) {\n      d.fx = event.x;\n      d.fy = event.y;\n    }\n    function dragended(event, d) {\n      if (!event.active) simulation.alphaTarget(0);\n      d.fx = null;\n      d.fy = null;\n    }\n  }, [data, width, height]);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    ref: svgRef,\n    style: {\n      width: svgDimensions.width,\n      height: svgDimensions.height,\n      backgroundColor: '#f0f0f0',\n      borderRadius: '8px'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n}\n_s(ProteinNetwork, \"OduF9RO6GYgL717tkPFnWEzB5Kc=\");\n_c = ProteinNetwork;\nexport default ProteinNetwork;\nvar _c;\n$RefreshReg$(_c, \"ProteinNetwork\");","map":{"version":3,"names":["React","useEffect","useRef","useState","d3","jsxDEV","_jsxDEV","ProteinNetwork","onSelectProtein","_s","svgRef","data","setData","nodes","links","svgDimensions","setSvgDimensions","width","height","transformData","interactions","nodesMap","Map","forEach","interaction","source","target","score","parseFloat","Score","has","set","id","push","value","Array","from","values","fetchData","response","fetch","json","graphData","error","console","svg","select","current","attr","style","simulation","forceSimulation","force","forceLink","d","distance","forceManyBody","strength","forceCenter","forceCollide","radius","link","append","selectAll","join","Math","sqrt","node","call","drag","on","dragstarted","dragged","dragended","event","transition","duration","label","text","x","y","active","alphaTarget","restart","fx","fy","ref","backgroundColor","borderRadius","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/sunxiaojian/project/108互作网站/protein-interaction-site/src/components/ProteinNetwork.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport * as d3 from 'd3';\n\nfunction ProteinNetwork({ onSelectProtein }) {\n  const svgRef = useRef(null);\n  const [data, setData] = useState({\n    nodes: [],\n    links: []\n  });\n  const [svgDimensions, setSvgDimensions] = useState({\n    width: 800,\n    height: 600\n  });\n\n  // 转换互作数据为网络图数据\n  const transformData = (interactions) => {\n    const nodesMap = new Map();\n    const links = [];\n    \n    // 处理互作数据\n    interactions.forEach(interaction => {\n      const source = interaction['Protein 1'];\n      const target = interaction['Protein 2'];\n      const score = parseFloat(interaction.Score);\n      \n      // 添加节点\n      if (!nodesMap.has(source)) {\n        nodesMap.set(source, { id: source });\n      }\n      if (!nodesMap.has(target)) {\n        nodesMap.set(target, { id: target });\n      }\n      \n      // 添加链接\n      links.push({\n        source,\n        target,\n        value: score\n      });\n    });\n    \n    return {\n      nodes: Array.from(nodesMap.values()),\n      links\n    };\n  };\n\n  // 加载互作数据\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('/api/interactions');\n        const interactions = await response.json();\n        const graphData = transformData(interactions);\n        setData(graphData);\n      } catch (error) {\n        console.error('Failed to fetch interactions:', error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    const svg = d3.select(svgRef.current);\n\n    // 设置SVG尺寸\n    svg.attr('width', svgDimensions.width)\n       .attr('height', svgDimensions.height)\n       .style('transition', 'all 0.3s ease');\n\n    // 创建力导向图模拟\n    const simulation = d3.forceSimulation(data.nodes)\n      .force('link', d3.forceLink(data.links).id(d => d.id).distance(100))\n      .force('charge', d3.forceManyBody().strength(-200))\n      .force('center', d3.forceCenter(svgDimensions.width / 2, svgDimensions.height / 2))\n      .force('collision', d3.forceCollide().radius(30));\n\n  // 创建链接\n  const link = svg.append('g')\n    .selectAll('line')\n    .data(data.links)\n    .join('line')\n    .attr('stroke', d => d.value === 1 ? '#1976d2' : '#999')\n    .attr('stroke-opacity', d => d.value === 1 ? 1 : 0.6)\n    .attr('stroke-width', d => d.value === 1 ? 2 : Math.sqrt(d.value || 1))\n    .attr('stroke-dasharray', d => d.value === 1 ? null : '2,2');\n\n  // 创建节点\n  const node = svg.append('g')\n    .attr('stroke', '#fff')\n    .attr('stroke-width', 1.5)\n    .selectAll('circle')\n    .data(data.nodes)\n    .join('circle')\n    .attr('r', 8)\n    .attr('fill', '#1976d2')\n    .call(d3.drag()\n      .on('start', dragstarted)\n      .on('drag', dragged)\n      .on('end', dragended)\n    )\n    .on('click', (event, d) => {\n      onSelectProtein(d.id);\n    })\n    .on('mouseover', function() {\n      d3.select(this)\n        .transition()\n        .duration(100)\n        .attr('r', 12)\n        .attr('fill', '#ff7f0e');\n    })\n    .on('mouseout', function() {\n      d3.select(this)\n        .transition()\n        .duration(100)\n        .attr('r', 8)\n        .attr('fill', '#1976d2');\n    });\n\n    // 添加节点标签\n    const label = svg.append('g')\n      .selectAll('text')\n      .data(data.nodes)\n      .join('text')\n      .text(d => d.id)\n      .attr('font-size', 10)\n      .attr('dx', 12)\n      .attr('dy', '.35em');\n\n    // 动画更新\n    simulation.on('tick', () => {\n      link\n        .attr('x1', d => d.source.x)\n        .attr('y1', d => d.source.y)\n        .attr('x2', d => d.target.x)\n        .attr('y2', d => d.target.y);\n\n      node\n        .attr('cx', d => d.x)\n        .attr('cy', d => d.y);\n\n      label\n        .attr('x', d => d.x)\n        .attr('y', d => d.y);\n    });\n\n    // 拖拽事件处理\n    function dragstarted(event, d) {\n      if (!event.active) simulation.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n\n    function dragged(event, d) {\n      d.fx = event.x;\n      d.fy = event.y;\n    }\n\n    function dragended(event, d) {\n      if (!event.active) simulation.alphaTarget(0);\n      d.fx = null;\n      d.fy = null;\n    }\n\n  }, [data, width, height]);\n\n  return (\n    <svg \n      ref={svgRef}\n      style={{ \n        width: svgDimensions.width, \n        height: svgDimensions.height,\n        backgroundColor: '#f0f0f0',\n        borderRadius: '8px'\n      }}\n    ></svg>\n  );\n}\n\nexport default ProteinNetwork;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}