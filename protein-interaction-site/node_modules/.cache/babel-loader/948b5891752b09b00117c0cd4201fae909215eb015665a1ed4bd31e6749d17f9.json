{"ast":null,"code":"import React,{useEffect,useRef,useState}from'react';import*as d3 from'd3';import{CircularProgress,Typography}from'@mui/material';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function ProteinNetwork(_ref){let{onSelectProtein}=_ref;const svgRef=useRef(null);const[data,setData]=useState({nodes:[],links:[]});const[loading,setLoading]=useState(true);const[svgDimensions,setSvgDimensions]=useState({width:800,height:600});// Transform interaction data into graph data\nconst transformData=interactions=>{const nodesMap=new Map();const links=[];// Process interaction data\ninteractions.forEach(interaction=>{const source=interaction['Protein 1'];const target=interaction['Protein 2'];const score=parseFloat(interaction.Score);// Add nodes\nif(!nodesMap.has(source)){nodesMap.set(source,{id:source});}if(!nodesMap.has(target)){nodesMap.set(target,{id:target});}// Add links\nlinks.push({source,target,value:score});});return{nodes:Array.from(nodesMap.values()),links};};// Load interaction data\nuseEffect(()=>{const fetchData=async()=>{try{const response=await fetch('/api/interactions');const interactions=await response.json();const graphData=transformData(interactions);setData(graphData);setLoading(false);}catch(error){console.error('Failed to fetch interactions:',error);setLoading(false);}};fetchData();},[]);useEffect(()=>{if(loading)return;const svg=d3.select(svgRef.current);// Set SVG dimensions\nsvg.attr('width',svgDimensions.width).attr('height',svgDimensions.height).style('transition','all 0.3s ease');// Create force simulation\nconst simulation=d3.forceSimulation(data.nodes).force('link',d3.forceLink(data.links).id(d=>d.id).distance(100)).force('charge',d3.forceManyBody().strength(-200)).force('center',d3.forceCenter(svgDimensions.width/2,svgDimensions.height/2)).force('collision',d3.forceCollide().radius(30));// Create links\nconst link=svg.append('g').selectAll('line').data(data.links).join('line').attr('stroke',d=>d.value===1?'#1976d2':'#999').attr('stroke-opacity',d=>d.value===1?1:0.6).attr('stroke-width',d=>d.value===1?2:Math.sqrt(d.value||1)).attr('stroke-dasharray',d=>d.value===1?null:'2,2');// Create nodes\nconst node=svg.append('g').attr('stroke','#fff').attr('stroke-width',1.5).selectAll('circle').data(data.nodes).join('circle').attr('r',8).attr('fill','#1976d2').call(d3.drag().on('start',dragstarted).on('drag',dragged).on('end',dragended)).on('click',(event,d)=>{d3.select(this).transition().duration(200).attr('r',16).transition().duration(200).attr('r',8);onSelectProtein(d.id);}).on('mouseover',function(){d3.select(this).transition().duration(100).attr('r',12).attr('fill','#ff7f0e');}).on('mouseout',function(){d3.select(this).transition().duration(100).attr('r',8).attr('fill','#1976d2');});// Add node labels\nconst label=svg.append('g').selectAll('text').data(data.nodes).join('text').text(d=>d.id).attr('font-size',10).attr('dx',12).attr('dy','.35em');// Animate updates\nsimulation.on('tick',()=>{link.attr('x1',d=>d.source.x).attr('y1',d=>d.source.y).attr('x2',d=>d.target.x).attr('y2',d=>d.target.y);node.attr('cx',d=>d.x).attr('cy',d=>d.y);label.attr('x',d=>d.x).attr('y',d=>d.y);});// Drag event handlers\nfunction dragstarted(event,d){if(!event.active)simulation.alphaTarget(0.3).restart();d.fx=d.x;d.fy=d.y;}function dragged(event,d){d.fx=event.x;d.fy=event.y;}function dragended(event,d){if(!event.active)simulation.alphaTarget(0);d.fx=null;d.fy=null;}},[data,svgDimensions.width,svgDimensions.height,loading]);return/*#__PURE__*/_jsxs(Box,{sx:{position:'relative',width:'100%',height:'100%'},children:[loading&&/*#__PURE__*/_jsxs(Box,{sx:{position:'absolute',top:'50%',left:'50%',transform:'translate(-50%, -50%)',textAlign:'center'},children:[/*#__PURE__*/_jsx(CircularProgress,{}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",sx:{mt:1},children:\"Loading protein interactions...\"})]}),/*#__PURE__*/_jsx(\"svg\",{ref:svgRef,style:{width:svgDimensions.width,height:svgDimensions.height,backgroundColor:'#f0f0f0',borderRadius:'8px',opacity:loading?0.3:1}})]});}export default ProteinNetwork;","map":{"version":3,"names":["React","useEffect","useRef","useState","d3","CircularProgress","Typography","jsx","_jsx","jsxs","_jsxs","ProteinNetwork","_ref","onSelectProtein","svgRef","data","setData","nodes","links","loading","setLoading","svgDimensions","setSvgDimensions","width","height","transformData","interactions","nodesMap","Map","forEach","interaction","source","target","score","parseFloat","Score","has","set","id","push","value","Array","from","values","fetchData","response","fetch","json","graphData","error","console","svg","select","current","attr","style","simulation","forceSimulation","force","forceLink","d","distance","forceManyBody","strength","forceCenter","forceCollide","radius","link","append","selectAll","join","Math","sqrt","node","call","drag","on","dragstarted","dragged","dragended","event","transition","duration","label","text","x","y","active","alphaTarget","restart","fx","fy","Box","sx","position","children","top","left","transform","textAlign","variant","mt","ref","backgroundColor","borderRadius","opacity"],"sources":["/Users/sxiaojian/NDH108PPIWeb/protein-interaction-site/src/components/ProteinNetwork.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport * as d3 from 'd3';\nimport { CircularProgress, Typography } from '@mui/material';\n\nfunction ProteinNetwork({ onSelectProtein }) {\n  const svgRef = useRef(null);\n  const [data, setData] = useState({\n    nodes: [],\n    links: []\n  });\n  const [loading, setLoading] = useState(true);\n  const [svgDimensions, setSvgDimensions] = useState({\n    width: 800,\n    height: 600\n  });\n\n  // Transform interaction data into graph data\n  const transformData = (interactions) => {\n    const nodesMap = new Map();\n    const links = [];\n    \n    // Process interaction data\n    interactions.forEach(interaction => {\n      const source = interaction['Protein 1'];\n      const target = interaction['Protein 2'];\n      const score = parseFloat(interaction.Score);\n      \n      // Add nodes\n      if (!nodesMap.has(source)) {\n        nodesMap.set(source, { id: source });\n      }\n      if (!nodesMap.has(target)) {\n        nodesMap.set(target, { id: target });\n      }\n      \n      // Add links\n      links.push({\n        source,\n        target,\n        value: score\n      });\n    });\n    \n    return {\n      nodes: Array.from(nodesMap.values()),\n      links\n    };\n  };\n\n  // Load interaction data\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('/api/interactions');\n        const interactions = await response.json();\n        const graphData = transformData(interactions);\n        setData(graphData);\n        setLoading(false);\n      } catch (error) {\n        console.error('Failed to fetch interactions:', error);\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    if (loading) return;\n\n    const svg = d3.select(svgRef.current);\n\n    // Set SVG dimensions\n    svg.attr('width', svgDimensions.width)\n       .attr('height', svgDimensions.height)\n       .style('transition', 'all 0.3s ease');\n\n    // Create force simulation\n    const simulation = d3.forceSimulation(data.nodes)\n      .force('link', d3.forceLink(data.links).id(d => d.id).distance(100))\n      .force('charge', d3.forceManyBody().strength(-200))\n      .force('center', d3.forceCenter(svgDimensions.width / 2, svgDimensions.height / 2))\n      .force('collision', d3.forceCollide().radius(30));\n\n    // Create links\n    const link = svg.append('g')\n      .selectAll('line')\n      .data(data.links)\n      .join('line')\n      .attr('stroke', d => d.value === 1 ? '#1976d2' : '#999')\n      .attr('stroke-opacity', d => d.value === 1 ? 1 : 0.6)\n      .attr('stroke-width', d => d.value === 1 ? 2 : Math.sqrt(d.value || 1))\n      .attr('stroke-dasharray', d => d.value === 1 ? null : '2,2');\n\n    // Create nodes\n    const node = svg.append('g')\n      .attr('stroke', '#fff')\n      .attr('stroke-width', 1.5)\n      .selectAll('circle')\n      .data(data.nodes)\n      .join('circle')\n      .attr('r', 8)\n      .attr('fill', '#1976d2')\n      .call(d3.drag()\n        .on('start', dragstarted)\n        .on('drag', dragged)\n        .on('end', dragended)\n      )\n      .on('click', (event, d) => {\n        d3.select(this)\n          .transition()\n          .duration(200)\n          .attr('r', 16)\n          .transition()\n          .duration(200)\n          .attr('r', 8);\n        onSelectProtein(d.id);\n      })\n      .on('mouseover', function() {\n        d3.select(this)\n          .transition()\n          .duration(100)\n          .attr('r', 12)\n          .attr('fill', '#ff7f0e');\n      })\n      .on('mouseout', function() {\n        d3.select(this)\n          .transition()\n          .duration(100)\n          .attr('r', 8)\n          .attr('fill', '#1976d2');\n      });\n\n    // Add node labels\n    const label = svg.append('g')\n      .selectAll('text')\n      .data(data.nodes)\n      .join('text')\n      .text(d => d.id)\n      .attr('font-size', 10)\n      .attr('dx', 12)\n      .attr('dy', '.35em');\n\n    // Animate updates\n    simulation.on('tick', () => {\n      link\n        .attr('x1', d => d.source.x)\n        .attr('y1', d => d.source.y)\n        .attr('x2', d => d.target.x)\n        .attr('y2', d => d.target.y);\n\n      node\n        .attr('cx', d => d.x)\n        .attr('cy', d => d.y);\n\n      label\n        .attr('x', d => d.x)\n        .attr('y', d => d.y);\n    });\n\n    // Drag event handlers\n    function dragstarted(event, d) {\n      if (!event.active) simulation.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n\n    function dragged(event, d) {\n      d.fx = event.x;\n      d.fy = event.y;\n    }\n\n    function dragended(event, d) {\n      if (!event.active) simulation.alphaTarget(0);\n      d.fx = null;\n      d.fy = null;\n    }\n\n  }, [data, svgDimensions.width, svgDimensions.height, loading]);\n\n  return (\n    <Box sx={{ position: 'relative', width: '100%', height: '100%' }}>\n      {loading && (\n        <Box sx={{\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n          textAlign: 'center'\n        }}>\n          <CircularProgress />\n          <Typography variant=\"body2\" sx={{ mt: 1 }}>\n            Loading protein interactions...\n          </Typography>\n        </Box>\n      )}\n      <svg \n        ref={svgRef}\n        style={{ \n          width: svgDimensions.width, \n          height: svgDimensions.height,\n          backgroundColor: '#f0f0f0',\n          borderRadius: '8px',\n          opacity: loading ? 0.3 : 1\n        }}\n      ></svg>\n    </Box>\n  );\n}\n\nexport default ProteinNetwork;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}