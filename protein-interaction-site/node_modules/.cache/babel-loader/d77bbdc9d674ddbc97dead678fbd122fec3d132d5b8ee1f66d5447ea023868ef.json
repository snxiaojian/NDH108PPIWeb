{"ast":null,"code":"import React,{useEffect,useState}from'react';import{Box,Card,CardContent,Typography,CircularProgress,Chip,Divider,List,ListItem,ListItemText}from'@mui/material';import{API_BASE_URL}from'../config';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function ProteinDetails(_ref){let{protein}=_ref;const[details,setDetails]=useState(null);const[loading,setLoading]=useState(false);const[error,setError]=useState(null);useEffect(()=>{if(!protein){setDetails(null);return;}const fetchDetails=async()=>{try{setLoading(true);setError(null);const response=await fetch(`${API_BASE_URL}/protein/${protein}`);if(!response.ok)throw new Error('Failed to fetch protein details');const data=await response.json();setDetails(data);}catch(err){setError(err.message);}finally{setLoading(false);}};fetchDetails();},[protein]);if(!protein){return/*#__PURE__*/_jsx(Card,{sx:{height:'100%',display:'flex',alignItems:'center',justifyContent:'center'},children:/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",align:\"center\",children:\"\\u8BF7\\u9009\\u62E9\\u4E00\\u4E2A\\u86CB\\u767D\\u8D28\\u67E5\\u770B\\u8BE6\\u7EC6\\u4FE1\\u606F\"})})});}if(loading){return/*#__PURE__*/_jsx(Card,{sx:{height:'100%',display:'flex',alignItems:'center',justifyContent:'center'},children:/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsx(CircularProgress,{})})});}if(error){return/*#__PURE__*/_jsx(Card,{sx:{height:'100%'},children:/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsxs(Typography,{color:\"error\",align:\"center\",children:[\"Error: \",error]})})});}if(!details){return null;}const sections=[{key:'Biological_process',label:'Biological Process'},{key:'Cellular_component',label:'Cellular Component'},{key:'Molecular_function',label:'Molecular Function'},{key:'KOG',label:'KOG'},{key:'K',label:'K'},{key:'KEGG_Pathways',label:'KEGG Pathways'},{key:'IPRs',label:'IPRs'},{key:'Subcellular_localization',label:'Subcellular Localization'},{key:'signalP',label:'Signal P'}];return/*#__PURE__*/_jsx(Card,{sx:{height:'100%',overflow:'auto'},children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:protein}),/*#__PURE__*/_jsx(Divider,{sx:{my:2}}),/*#__PURE__*/_jsx(List,{children:sections.map(_ref2=>{let{key,label}=_ref2;return details[key]&&/*#__PURE__*/_jsxs(ListItem,{sx:{flexDirection:'column',alignItems:'flex-start'},children:[/*#__PURE__*/_jsx(ListItemText,{primary:/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",color:\"primary\",children:label}),secondary:/*#__PURE__*/_jsx(Box,{sx:{mt:1},children:Array.isArray(details[key])?/*#__PURE__*/_jsx(Box,{sx:{display:'flex',flexWrap:'wrap',gap:0.5},children:details[key].map((item,index)=>/*#__PURE__*/_jsx(Chip,{label:item,size:\"small\",sx:{backgroundColor:'#e3f2fd','&:hover':{backgroundColor:'#bbdefb'}}},index))}):/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:details[key]})})}),/*#__PURE__*/_jsx(Divider,{sx:{my:1,width:'100%'}})]},key);})})]})});}export default ProteinDetails;","map":{"version":3,"names":["React","useEffect","useState","Box","Card","CardContent","Typography","CircularProgress","Chip","Divider","List","ListItem","ListItemText","API_BASE_URL","jsx","_jsx","jsxs","_jsxs","ProteinDetails","_ref","protein","details","setDetails","loading","setLoading","error","setError","fetchDetails","response","fetch","ok","Error","data","json","err","message","sx","height","display","alignItems","justifyContent","children","variant","color","align","sections","key","label","overflow","gutterBottom","my","map","_ref2","flexDirection","primary","secondary","mt","Array","isArray","flexWrap","gap","item","index","size","backgroundColor","width"],"sources":["/Users/sxiaojian/NDH108PPIWeb/protein-interaction-site/src/components/ProteinDetails.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  CircularProgress,\n  Chip,\n  Divider,\n  List,\n  ListItem,\n  ListItemText\n} from '@mui/material';\nimport { API_BASE_URL } from '../config';\n\nfunction ProteinDetails({ protein }) {\n  const [details, setDetails] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!protein) {\n      setDetails(null);\n      return;\n    }\n\n    const fetchDetails = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        const response = await fetch(`${API_BASE_URL}/protein/${protein}`);\n        if (!response.ok) throw new Error('Failed to fetch protein details');\n        const data = await response.json();\n        setDetails(data);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchDetails();\n  }, [protein]);\n\n  if (!protein) {\n    return (\n      <Card sx={{ height: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n        <CardContent>\n          <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\">\n            请选择一个蛋白质查看详细信息\n          </Typography>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  if (loading) {\n    return (\n      <Card sx={{ height: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n        <CardContent>\n          <CircularProgress />\n        </CardContent>\n      </Card>\n    );\n  }\n\n  if (error) {\n    return (\n      <Card sx={{ height: '100%' }}>\n        <CardContent>\n          <Typography color=\"error\" align=\"center\">\n            Error: {error}\n          </Typography>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  if (!details) {\n    return null;\n  }\n\n  const sections = [\n    { key: 'Biological_process', label: 'Biological Process' },\n    { key: 'Cellular_component', label: 'Cellular Component' },\n    { key: 'Molecular_function', label: 'Molecular Function' },\n    { key: 'KOG', label: 'KOG' },\n    { key: 'K', label: 'K' },\n    { key: 'KEGG_Pathways', label: 'KEGG Pathways' },\n    { key: 'IPRs', label: 'IPRs' },\n    { key: 'Subcellular_localization', label: 'Subcellular Localization' },\n    { key: 'signalP', label: 'Signal P' }\n  ];\n\n  return (\n    <Card sx={{ height: '100%', overflow: 'auto' }}>\n      <CardContent>\n        <Typography variant=\"h6\" gutterBottom>\n          {protein}\n        </Typography>\n        <Divider sx={{ my: 2 }} />\n        \n        <List>\n          {sections.map(({ key, label }) => (\n            details[key] && (\n              <ListItem key={key} sx={{ flexDirection: 'column', alignItems: 'flex-start' }}>\n                <ListItemText\n                  primary={<Typography variant=\"subtitle2\" color=\"primary\">{label}</Typography>}\n                  secondary={\n                    <Box sx={{ mt: 1 }}>\n                      {Array.isArray(details[key]) ? (\n                        <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n                          {details[key].map((item, index) => (\n                            <Chip\n                              key={index}\n                              label={item}\n                              size=\"small\"\n                              sx={{\n                                backgroundColor: '#e3f2fd',\n                                '&:hover': {\n                                  backgroundColor: '#bbdefb'\n                                }\n                              }}\n                            />\n                          ))}\n                        </Box>\n                      ) : (\n                        <Typography variant=\"body2\">{details[key]}</Typography>\n                      )}\n                    </Box>\n                  }\n                />\n                <Divider sx={{ my: 1, width: '100%' }} />\n              </ListItem>\n            )\n          ))}\n        </List>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default ProteinDetails;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}