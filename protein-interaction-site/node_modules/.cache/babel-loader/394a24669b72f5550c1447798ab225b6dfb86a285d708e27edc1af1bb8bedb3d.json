{"ast":null,"code":"var _jsxFileName = \"/Users/sxiaojian/NDH108PPIWeb/protein-interaction-site/src/components/ProteinDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Box, Card, CardContent, Typography, CircularProgress, Chip, Divider, List, ListItem, ListItemText } from '@mui/material';\nimport { API_BASE_URL } from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProteinDetails({\n  protein\n}) {\n  _s();\n  const [details, setDetails] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (!protein) {\n      setDetails(null);\n      return;\n    }\n    const fetchDetails = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        const response = await fetch(`${API_BASE_URL}/protein/${protein}`);\n        if (!response.ok) throw new Error('Failed to fetch protein details');\n        const data = await response.json();\n        setDetails(data);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchDetails();\n  }, [protein]);\n  if (!protein) {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        height: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          align: \"center\",\n          children: \"\\u8BF7\\u9009\\u62E9\\u4E00\\u4E2A\\u86CB\\u767D\\u8D28\\u67E5\\u770B\\u8BE6\\u7EC6\\u4FE1\\u606F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        height: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        height: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"error\",\n          align: \"center\",\n          children: [\"Error: \", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  }\n  if (!details) {\n    return null;\n  }\n  const sections = [{\n    key: 'Biological_process',\n    label: 'Biological Process'\n  }, {\n    key: 'Cellular_component',\n    label: 'Cellular Component'\n  }, {\n    key: 'Molecular_function',\n    label: 'Molecular Function'\n  }, {\n    key: 'KOG',\n    label: 'KOG'\n  }, {\n    key: 'K',\n    label: 'K'\n  }, {\n    key: 'KEGG_Pathways',\n    label: 'KEGG Pathways'\n  }, {\n    key: 'IPRs',\n    label: 'IPRs'\n  }, {\n    key: 'Subcellular_localization',\n    label: 'Subcellular Localization'\n  }, {\n    key: 'signalP',\n    label: 'Signal P'\n  }];\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      height: '100%',\n      overflow: 'auto'\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: protein\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        sx: {\n          my: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: sections.map(({\n          key,\n          label\n        }) => details[key] && /*#__PURE__*/_jsxDEV(ListItem, {\n          sx: {\n            flexDirection: 'column',\n            alignItems: 'flex-start'\n          },\n          children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle2\",\n              color: \"primary\",\n              children: label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 28\n            }, this),\n            secondary: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mt: 1\n              },\n              children: Array.isArray(details[key]) ? /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  flexWrap: 'wrap',\n                  gap: 0.5\n                },\n                children: details[key].map((item, index) => /*#__PURE__*/_jsxDEV(Chip, {\n                  label: item,\n                  size: \"small\",\n                  sx: {\n                    backgroundColor: '#e3f2fd',\n                    '&:hover': {\n                      backgroundColor: '#bbdefb'\n                    }\n                  }\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 29\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 25\n              }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: details[key]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            sx: {\n              my: 1,\n              width: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n_s(ProteinDetails, \"GPHqW417MgjpiYBozgAzRxZXnfo=\");\n_c = ProteinDetails;\nexport default ProteinDetails;\nvar _c;\n$RefreshReg$(_c, \"ProteinDetails\");","map":{"version":3,"names":["React","useEffect","useState","Box","Card","CardContent","Typography","CircularProgress","Chip","Divider","List","ListItem","ListItemText","API_BASE_URL","jsxDEV","_jsxDEV","ProteinDetails","protein","_s","details","setDetails","loading","setLoading","error","setError","fetchDetails","response","fetch","ok","Error","data","json","err","message","sx","height","display","alignItems","justifyContent","children","variant","color","align","fileName","_jsxFileName","lineNumber","columnNumber","sections","key","label","overflow","gutterBottom","my","map","flexDirection","primary","secondary","mt","Array","isArray","flexWrap","gap","item","index","size","backgroundColor","width","_c","$RefreshReg$"],"sources":["/Users/sxiaojian/NDH108PPIWeb/protein-interaction-site/src/components/ProteinDetails.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  CircularProgress,\n  Chip,\n  Divider,\n  List,\n  ListItem,\n  ListItemText\n} from '@mui/material';\nimport { API_BASE_URL } from '../config';\n\nfunction ProteinDetails({ protein }) {\n  const [details, setDetails] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!protein) {\n      setDetails(null);\n      return;\n    }\n\n    const fetchDetails = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        const response = await fetch(`${API_BASE_URL}/protein/${protein}`);\n        if (!response.ok) throw new Error('Failed to fetch protein details');\n        const data = await response.json();\n        setDetails(data);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchDetails();\n  }, [protein]);\n\n  if (!protein) {\n    return (\n      <Card sx={{ height: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n        <CardContent>\n          <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\">\n            请选择一个蛋白质查看详细信息\n          </Typography>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  if (loading) {\n    return (\n      <Card sx={{ height: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n        <CardContent>\n          <CircularProgress />\n        </CardContent>\n      </Card>\n    );\n  }\n\n  if (error) {\n    return (\n      <Card sx={{ height: '100%' }}>\n        <CardContent>\n          <Typography color=\"error\" align=\"center\">\n            Error: {error}\n          </Typography>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  if (!details) {\n    return null;\n  }\n\n  const sections = [\n    { key: 'Biological_process', label: 'Biological Process' },\n    { key: 'Cellular_component', label: 'Cellular Component' },\n    { key: 'Molecular_function', label: 'Molecular Function' },\n    { key: 'KOG', label: 'KOG' },\n    { key: 'K', label: 'K' },\n    { key: 'KEGG_Pathways', label: 'KEGG Pathways' },\n    { key: 'IPRs', label: 'IPRs' },\n    { key: 'Subcellular_localization', label: 'Subcellular Localization' },\n    { key: 'signalP', label: 'Signal P' }\n  ];\n\n  return (\n    <Card sx={{ height: '100%', overflow: 'auto' }}>\n      <CardContent>\n        <Typography variant=\"h6\" gutterBottom>\n          {protein}\n        </Typography>\n        <Divider sx={{ my: 2 }} />\n        \n        <List>\n          {sections.map(({ key, label }) => (\n            details[key] && (\n              <ListItem key={key} sx={{ flexDirection: 'column', alignItems: 'flex-start' }}>\n                <ListItemText\n                  primary={<Typography variant=\"subtitle2\" color=\"primary\">{label}</Typography>}\n                  secondary={\n                    <Box sx={{ mt: 1 }}>\n                      {Array.isArray(details[key]) ? (\n                        <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n                          {details[key].map((item, index) => (\n                            <Chip\n                              key={index}\n                              label={item}\n                              size=\"small\"\n                              sx={{\n                                backgroundColor: '#e3f2fd',\n                                '&:hover': {\n                                  backgroundColor: '#bbdefb'\n                                }\n                              }}\n                            />\n                          ))}\n                        </Box>\n                      ) : (\n                        <Typography variant=\"body2\">{details[key]}</Typography>\n                      )}\n                    </Box>\n                  }\n                />\n                <Divider sx={{ my: 1, width: '100%' }} />\n              </ListItem>\n            )\n          ))}\n        </List>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default ProteinDetails;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SACEC,GAAG,EACHC,IAAI,EACJC,WAAW,EACXC,UAAU,EACVC,gBAAgB,EAChBC,IAAI,EACJC,OAAO,EACPC,IAAI,EACJC,QAAQ,EACRC,YAAY,QACP,eAAe;AACtB,SAASC,YAAY,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,SAASC,cAAcA,CAAC;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EACnC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACqB,KAAK,EAAEC,QAAQ,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,IAAI,CAACgB,OAAO,EAAE;MACZG,UAAU,CAAC,IAAI,CAAC;MAChB;IACF;IAEA,MAAMK,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACFH,UAAU,CAAC,IAAI,CAAC;QAChBE,QAAQ,CAAC,IAAI,CAAC;QACd,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGd,YAAY,YAAYI,OAAO,EAAE,CAAC;QAClE,IAAI,CAACS,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,iCAAiC,CAAC;QACpE,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCX,UAAU,CAACU,IAAI,CAAC;MAClB,CAAC,CAAC,OAAOE,GAAG,EAAE;QACZR,QAAQ,CAACQ,GAAG,CAACC,OAAO,CAAC;MACvB,CAAC,SAAS;QACRX,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDG,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACR,OAAO,CAAC,CAAC;EAEb,IAAI,CAACA,OAAO,EAAE;IACZ,oBACEF,OAAA,CAACX,IAAI;MAAC8B,EAAE,EAAE;QAAEC,MAAM,EAAE,MAAM;QAAEC,OAAO,EAAE,MAAM;QAAEC,UAAU,EAAE,QAAQ;QAAEC,cAAc,EAAE;MAAS,CAAE;MAAAC,QAAA,eAC5FxB,OAAA,CAACV,WAAW;QAAAkC,QAAA,eACVxB,OAAA,CAACT,UAAU;UAACkC,OAAO,EAAC,OAAO;UAACC,KAAK,EAAC,gBAAgB;UAACC,KAAK,EAAC,QAAQ;UAAAH,QAAA,EAAC;QAElE;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAEX;EAEA,IAAIzB,OAAO,EAAE;IACX,oBACEN,OAAA,CAACX,IAAI;MAAC8B,EAAE,EAAE;QAAEC,MAAM,EAAE,MAAM;QAAEC,OAAO,EAAE,MAAM;QAAEC,UAAU,EAAE,QAAQ;QAAEC,cAAc,EAAE;MAAS,CAAE;MAAAC,QAAA,eAC5FxB,OAAA,CAACV,WAAW;QAAAkC,QAAA,eACVxB,OAAA,CAACR,gBAAgB;UAAAoC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAEX;EAEA,IAAIvB,KAAK,EAAE;IACT,oBACER,OAAA,CAACX,IAAI;MAAC8B,EAAE,EAAE;QAAEC,MAAM,EAAE;MAAO,CAAE;MAAAI,QAAA,eAC3BxB,OAAA,CAACV,WAAW;QAAAkC,QAAA,eACVxB,OAAA,CAACT,UAAU;UAACmC,KAAK,EAAC,OAAO;UAACC,KAAK,EAAC,QAAQ;UAAAH,QAAA,GAAC,SAChC,EAAChB,KAAK;QAAA;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAEX;EAEA,IAAI,CAAC3B,OAAO,EAAE;IACZ,OAAO,IAAI;EACb;EAEA,MAAM4B,QAAQ,GAAG,CACf;IAAEC,GAAG,EAAE,oBAAoB;IAAEC,KAAK,EAAE;EAAqB,CAAC,EAC1D;IAAED,GAAG,EAAE,oBAAoB;IAAEC,KAAK,EAAE;EAAqB,CAAC,EAC1D;IAAED,GAAG,EAAE,oBAAoB;IAAEC,KAAK,EAAE;EAAqB,CAAC,EAC1D;IAAED,GAAG,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAM,CAAC,EAC5B;IAAED,GAAG,EAAE,GAAG;IAAEC,KAAK,EAAE;EAAI,CAAC,EACxB;IAAED,GAAG,EAAE,eAAe;IAAEC,KAAK,EAAE;EAAgB,CAAC,EAChD;IAAED,GAAG,EAAE,MAAM;IAAEC,KAAK,EAAE;EAAO,CAAC,EAC9B;IAAED,GAAG,EAAE,0BAA0B;IAAEC,KAAK,EAAE;EAA2B,CAAC,EACtE;IAAED,GAAG,EAAE,SAAS;IAAEC,KAAK,EAAE;EAAW,CAAC,CACtC;EAED,oBACElC,OAAA,CAACX,IAAI;IAAC8B,EAAE,EAAE;MAAEC,MAAM,EAAE,MAAM;MAAEe,QAAQ,EAAE;IAAO,CAAE;IAAAX,QAAA,eAC7CxB,OAAA,CAACV,WAAW;MAAAkC,QAAA,gBACVxB,OAAA,CAACT,UAAU;QAACkC,OAAO,EAAC,IAAI;QAACW,YAAY;QAAAZ,QAAA,EAClCtB;MAAO;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACb/B,OAAA,CAACN,OAAO;QAACyB,EAAE,EAAE;UAAEkB,EAAE,EAAE;QAAE;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAE1B/B,OAAA,CAACL,IAAI;QAAA6B,QAAA,EACFQ,QAAQ,CAACM,GAAG,CAAC,CAAC;UAAEL,GAAG;UAAEC;QAAM,CAAC,KAC3B9B,OAAO,CAAC6B,GAAG,CAAC,iBACVjC,OAAA,CAACJ,QAAQ;UAAWuB,EAAE,EAAE;YAAEoB,aAAa,EAAE,QAAQ;YAAEjB,UAAU,EAAE;UAAa,CAAE;UAAAE,QAAA,gBAC5ExB,OAAA,CAACH,YAAY;YACX2C,OAAO,eAAExC,OAAA,CAACT,UAAU;cAACkC,OAAO,EAAC,WAAW;cAACC,KAAK,EAAC,SAAS;cAAAF,QAAA,EAAEU;YAAK;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAa,CAAE;YAC9EU,SAAS,eACPzC,OAAA,CAACZ,GAAG;cAAC+B,EAAE,EAAE;gBAAEuB,EAAE,EAAE;cAAE,CAAE;cAAAlB,QAAA,EAChBmB,KAAK,CAACC,OAAO,CAACxC,OAAO,CAAC6B,GAAG,CAAC,CAAC,gBAC1BjC,OAAA,CAACZ,GAAG;gBAAC+B,EAAE,EAAE;kBAAEE,OAAO,EAAE,MAAM;kBAAEwB,QAAQ,EAAE,MAAM;kBAAEC,GAAG,EAAE;gBAAI,CAAE;gBAAAtB,QAAA,EACtDpB,OAAO,CAAC6B,GAAG,CAAC,CAACK,GAAG,CAAC,CAACS,IAAI,EAAEC,KAAK,kBAC5BhD,OAAA,CAACP,IAAI;kBAEHyC,KAAK,EAAEa,IAAK;kBACZE,IAAI,EAAC,OAAO;kBACZ9B,EAAE,EAAE;oBACF+B,eAAe,EAAE,SAAS;oBAC1B,SAAS,EAAE;sBACTA,eAAe,EAAE;oBACnB;kBACF;gBAAE,GARGF,KAAK;kBAAApB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OASX,CACF;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CAAC,gBAEN/B,OAAA,CAACT,UAAU;gBAACkC,OAAO,EAAC,OAAO;gBAAAD,QAAA,EAAEpB,OAAO,CAAC6B,GAAG;cAAC;gBAAAL,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAa;YACvD;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE;UACN;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,eACF/B,OAAA,CAACN,OAAO;YAACyB,EAAE,EAAE;cAAEkB,EAAE,EAAE,CAAC;cAAEc,KAAK,EAAE;YAAO;UAAE;YAAAvB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA,GA3B5BE,GAAG;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OA4BR,CAEb;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEX;AAAC5B,EAAA,CA7HQF,cAAc;AAAAmD,EAAA,GAAdnD,cAAc;AA+HvB,eAAeA,cAAc;AAAC,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}